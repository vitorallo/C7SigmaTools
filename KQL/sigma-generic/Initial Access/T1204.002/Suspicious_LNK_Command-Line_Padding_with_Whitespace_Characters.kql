// Title: Suspicious LNK Command-Line Padding with Whitespace Characters
// Author: Swachchhanda Shrawan Poudel (Nextron Systems)
// Date: 2025-03-19
// Level: high
// Description: Detects exploitation of LNK file command-line length discrepancy, where attackers hide malicious commands beyond the 260-character UI limit while the actual command-line argument field supports 4096 characters using whitespace padding (e.g., 0x20, 0x09-0x0D).
// Adversaries insert non-printable whitespace characters (e.g., Line Feed \x0A, Carriage Return \x0D) to pad the visible section of the LNK file, pushing malicious commands past the UI-visible boundary.
// The hidden payload, executed at runtime but invisible in Windows Explorer properties, enables stealthy execution and evasionâ€”commonly used for social engineering attacks.
// This rule flags suspicious use of such padding observed in real-world attacks.
// 
// Tags: attack.initial-access, attack.execution, attack.t1204.002
// ================================================================== 

DeviceProcessEvents
| where ((ProcessCommandLine contains "                 " or ProcessCommandLine contains "\\u0009" or ProcessCommandLine contains "\\u000A" or ProcessCommandLine contains "\\u0011" or ProcessCommandLine contains "\\u0012" or ProcessCommandLine contains "\\u0013" or ProcessCommandLine contains "\\u000B" or ProcessCommandLine contains "\\u000C" or ProcessCommandLine contains "\\u000D") or ProcessCommandLine matches regex "\\n\\n\\n\\n\\n\\n") and (InitiatingProcessFolderPath endswith "\\explorer.exe" or InitiatingProcessCommandLine contains ".lnk")